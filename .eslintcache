[{"E:\\greendeck\\trelloclone\\src\\index.js":"1","E:\\greendeck\\trelloclone\\src\\App.js":"2","E:\\greendeck\\trelloclone\\src\\reportWebVitals.js":"3","E:\\greendeck\\trelloclone\\src\\Main.js":"4","E:\\greendeck\\trelloclone\\src\\containers\\taskDialog\\taskDialog.js":"5","E:\\greendeck\\trelloclone\\src\\containers\\membersDialog\\membersDialog.js":"6","E:\\greendeck\\trelloclone\\src\\containers\\boardDialog\\boardDialog.js":"7","E:\\greendeck\\trelloclone\\src\\components\\dropdown\\dropdown.js":"8","E:\\greendeck\\trelloclone\\src\\pages\\defaultPage\\default.js":"9","E:\\greendeck\\trelloclone\\src\\pages\\login\\login.js":"10","E:\\greendeck\\trelloclone\\src\\pages\\signin\\signup.js":"11","E:\\greendeck\\trelloclone\\src\\pages\\boards\\boards.js":"12","E:\\greendeck\\trelloclone\\src\\components\\boardComponent\\boardComponent.js":"13","E:\\greendeck\\trelloclone\\src\\components\\boardComponent\\BoardComponent.js":"14","E:\\greendeck\\trelloclone\\src\\pages\\Boards\\Boards.js":"15","E:\\greendeck\\trelloclone\\src\\components\\BoardComponent\\BoardComponent.js":"16","E:\\greendeck\\trelloclone\\src\\components\\CreateBoardComponent\\CreateBoard.js":"17","E:\\greendeck\\trelloclone\\src\\pages\\Signin\\Signup.js":"18","E:\\greendeck\\trelloclone\\src\\pages\\Login\\Login.js":"19","E:\\greendeck\\trelloclone\\src\\pages\\Dashboard\\Dashboard.js":"20","E:\\greendeck\\trelloclone\\src\\pages\\Home\\Home.js":"21","E:\\greendeck\\trelloclone\\src\\pages\\DefaultPage\\Default.js":"22","E:\\greendeck\\trelloclone\\src\\components\\AddMembers\\AddMembers.js":"23","E:\\greendeck\\trelloclone\\src\\components\\AddTask\\AddTask.js":"24","E:\\greendeck\\trelloclone\\src\\components\\TaskCard\\TaskCard.js":"25","E:\\greendeck\\trelloclone\\src\\components\\ListTitle\\ListTitle.js":"26","E:\\greendeck\\trelloclone\\src\\components\\OpenTask\\OpenTask.js":"27","E:\\greendeck\\trelloclone\\src\\components\\EditTask\\EditTask.js":"28","E:\\greendeck\\trelloclone\\src\\pages\\Admin\\Admin.js":"29","E:\\greendeck\\trelloclone\\src\\Datalayer.js":"30"},{"size":531,"mtime":1607970430065,"results":"31","hashOfConfig":"32"},{"size":258,"mtime":1608047841750,"results":"33","hashOfConfig":"32"},{"size":362,"mtime":499162500000,"results":"34","hashOfConfig":"32"},{"size":910,"mtime":1608100978026,"results":"35","hashOfConfig":"32"},{"size":5146,"mtime":1608023643524,"results":"36","hashOfConfig":"32"},{"size":4170,"mtime":1608026666241,"results":"37","hashOfConfig":"32"},{"size":3983,"mtime":1608029631521,"results":"38","hashOfConfig":"32"},{"size":4455,"mtime":1608056030464,"results":"39","hashOfConfig":"32"},{"size":1974,"mtime":1608048082998,"results":"40","hashOfConfig":"32"},{"size":2371,"mtime":1608048101474,"results":"41","hashOfConfig":"32"},{"size":2999,"mtime":1608048114737,"results":"42","hashOfConfig":"32"},{"size":998,"mtime":1608046143950,"results":"43","hashOfConfig":"32"},{"size":1936,"mtime":1608047180374,"results":"44","hashOfConfig":"32"},{"size":1936,"mtime":1608047180374,"results":"45","hashOfConfig":"32"},{"size":1551,"mtime":1608156537332,"results":"46","hashOfConfig":"32"},{"size":2015,"mtime":1608183074059,"results":"47","hashOfConfig":"32"},{"size":5950,"mtime":1608160199569,"results":"48","hashOfConfig":"32"},{"size":3687,"mtime":1608157666269,"results":"49","hashOfConfig":"32"},{"size":3000,"mtime":1608159860351,"results":"50","hashOfConfig":"32"},{"size":4494,"mtime":1608183209852,"results":"51","hashOfConfig":"32"},{"size":284,"mtime":1608152468403,"results":"52","hashOfConfig":"32"},{"size":1974,"mtime":1608048082998,"results":"53","hashOfConfig":"32"},{"size":3868,"mtime":1608183925558,"results":"54","hashOfConfig":"32"},{"size":5426,"mtime":1608066555033,"results":"55","hashOfConfig":"32"},{"size":1894,"mtime":1608124464698,"results":"56","hashOfConfig":"32"},{"size":912,"mtime":1608061365701,"results":"57","hashOfConfig":"32"},{"size":5221,"mtime":1608183666210,"results":"58","hashOfConfig":"32"},{"size":5466,"mtime":1608151944427,"results":"59","hashOfConfig":"32"},{"size":1636,"mtime":1608116762947,"results":"60","hashOfConfig":"32"},{"size":18,"mtime":1608157205726,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1w3omae",{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"64"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"64"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"E:\\greendeck\\trelloclone\\src\\index.js",[],["134","135"],"E:\\greendeck\\trelloclone\\src\\App.js",["136"],"// import logo from './assets/icons/logo.svg';\nimport './App.css';\nimport Main from './Main';\nimport logo from './assets/icons/trello-mark-blue.png';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main/>\n    </div>\n  );\n}\n\nexport default App;\n","E:\\greendeck\\trelloclone\\src\\reportWebVitals.js",[],"E:\\greendeck\\trelloclone\\src\\Main.js",[],"E:\\greendeck\\trelloclone\\src\\containers\\taskDialog\\taskDialog.js",["137","138","139","140","141","142"],"import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { AvatarGroup } from \"@material-ui/lab\";\r\nimport { Card,Avatar, Typography, Box,Container,Divider, InputBase, Input, makeStyles } from \"@material-ui/core\";\r\nimport { Textarea } from \"@chakra-ui/react\"\r\nexport default function FormDialog() {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n        },\r\n        margin: {\r\n            margin: theme.spacing(1),\r\n        },\r\n    }));\r\n\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n                Open form dialog\r\n      </Button>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n                fullWidth\r\n                maxWidth='md'\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">\r\n          Add Task\r\n        </DialogTitle>\r\n        \r\n            <Box display=\"flex\">\r\n            <Container maxWidth='md'>\r\n\r\n                <DialogContent>\r\n                        \r\n                         {/* <InputBase\r\n                            className={classes.margin}\r\n                            // defaultValue=\"Naked input\"\r\n                            inputProps={{ 'aria-label': 'naked',readOnly: false, }} \r\n                            />  \r\n                        */}\r\n\r\n                    <Input  placeholder=\"Task Title\" inputProps={{ 'aria-label': 'description', readOnly: false }} />\r\n\r\n                </DialogContent>\r\n\r\n                <Box  m ={3}/>            \r\n                <DialogContent>\r\n\r\n                    <Box display=\"flex\">\r\n                        <Box><Typography>Members</Typography></Box>\r\n                        <Box m={0.2} />\r\n                        <Box><button className=\"addTask_button\">+</button></Box>\r\n                    </Box>\r\n                    <Box  m ={2}/>\r\n                    <AvatarGroup max={4}>\r\n                        <Avatar alt=\"RS\" src=\"/static/images/avatar/1.jpg\" />\r\n                        <Avatar alt=\"Travis Howard\" src=\"/static/images/avatar/2.jpg\" />\r\n                        <Avatar alt=\"Cindy Baker\" src=\"/static/images/avatar/3.jpg\" />\r\n                        <Avatar alt=\"Agnes Walker\" src=\"/static/images/avatar/4.jpg\" />\r\n                        <Avatar alt=\"Trevor Henderson\" src=\"/static/images/avatar/5.jpg\" />\r\n                    </AvatarGroup>\r\n                </DialogContent>\r\n                <Box  m ={5}/>\r\n                <DialogContent >\r\n                    \r\n\r\n                        <textarea rows=\"7\" cols=\"75\" value = \"The cat was playing in the garden.\" >\r\n                            \r\n                        </textarea>\r\n\r\n                    \r\n                        \r\n                        \r\n                    {/* <TextField\r\n                        id=\"outlined-helperText\"\r\n                        label=\"Description\"\r\n                        defaultValue=\"Default Value\"\r\n                        helperText=\"Note\"\r\n                        variant=\"outlined\"\r\n                        inputProps={{ readOnly: false, }}\r\n                        fullWidth /> */}\r\n\r\n\r\n                </DialogContent>\r\n                </Container>\r\n\r\n                <Box>\r\n                    <Box display=\"flex\" flexDirection=\"column\" justifyContent='center' marginTop={0}>\r\n\r\n                        <button className=\"log_button\">Edit</button>\r\n                        <Divider  />\r\n                        <button className=\"log_button\">Join Task</button>\r\n                        <Box component='span' m={2}/>\r\n                        \r\n                        <Typography>Move To</Typography>\r\n                        <Divider  />\r\n                        <button className=\"log_button\">Development</button>\r\n                        <button className=\"log_button\">Review</button>\r\n                        <button className=\"log_button\">Finished</button>\r\n\r\n                        \r\n                </Box>\r\n                \r\n                </Box>\r\n                </Box>\r\n\r\n\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Save\r\n                    </Button>\r\n                </DialogActions>\r\n                \r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","E:\\greendeck\\trelloclone\\src\\containers\\membersDialog\\membersDialog.js",["143","144"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nconst options = [\r\n  'None',\r\n  'Atria',\r\n  'Callisto',\r\n  'Dione',\r\n  'Ganymede',\r\n  'Hangouts Call',\r\n  'Luna',\r\n  'Oberon',\r\n  'Phobos',\r\n  'Pyxis',\r\n  'Sedna',\r\n  'Titania',\r\n  'Triton',\r\n  'Umbriel',\r\n];\r\n\r\nfunction ConfirmationDialogRaw(props) {\r\n  const { onClose, value: valueProp, open, ...other } = props;\r\n  const [value, setValue] = React.useState(valueProp);\r\n  const radioGroupRef = React.useRef(null);\r\n\r\n  React.useEffect(() => {\r\n    if (!open) {\r\n      setValue(valueProp);\r\n    }\r\n  }, [valueProp, open]);\r\n\r\n  const handleEntering = () => {\r\n    if (radioGroupRef.current != null) {\r\n      radioGroupRef.current.focus();\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    onClose();\r\n  };\r\n\r\n  const handleOk = () => {\r\n    onClose(value);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      maxWidth=\"xs\"\r\n      onEntering={handleEntering}\r\n      aria-labelledby=\"confirmation-dialog-title\"\r\n      open={open}\r\n      {...other}\r\n    >\r\n      <DialogTitle id=\"confirmation-dialog-title\">Phone Ringtone</DialogTitle>\r\n      <DialogContent dividers>\r\n        <RadioGroup\r\n          ref={radioGroupRef}\r\n          aria-label=\"ringtone\"\r\n          name=\"ringtone\"\r\n          value={value}\r\n          onChange={handleChange}\r\n        >\r\n          {options.map((option) => (\r\n            <FormControlLabel value={option} key={option} control={<Radio />} label={option} />\r\n          ))}\r\n        </RadioGroup>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button autoFocus onClick={handleCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={handleOk} color=\"primary\">\r\n          Ok\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nConfirmationDialogRaw.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  paper: {\r\n    width: '80%',\r\n    maxHeight: 435,\r\n  },\r\n}));\r\n\r\nexport default function ConfirmationDialog() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [value, setValue] = React.useState('Dione');\r\n\r\n  const handleClickListItem = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (newValue) => {\r\n    setOpen(false);\r\n\r\n    if (newValue) {\r\n      setValue(newValue);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <List component=\"div\" role=\"list\">\r\n      \r\n        \r\n        {/* <ListItem\r\n          button\r\n          divider\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"ringtone-menu\"\r\n          aria-label=\"phone ringtone\"\r\n          onClick={handleClickListItem}\r\n          role=\"listitem\"\r\n        >\r\n\r\n          <ListItemText primary=\"Members\" secondary={value} />\r\n        \r\n        </ListItem> */}\r\n\r\n        <Button onClick={handleClickListItem}> Members </Button>\r\n\r\n       \r\n        \r\n        \r\n\r\n        <ConfirmationDialogRaw\r\n          classes={{\r\n            paper: classes.paper,\r\n          }}\r\n          id=\"ringtone-menu\"\r\n          keepMounted\r\n          open={open}\r\n          onClose={handleClose}\r\n          value={value}\r\n        />\r\n\r\n\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n","E:\\greendeck\\trelloclone\\src\\containers\\boardDialog\\boardDialog.js",["145","146","147","148","149","150","151","152","153","154"],"import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { AvatarGroup } from \"@material-ui/lab\";\r\nimport { Card,Avatar, Typography, Box,Container,Divider, InputBase, Input, makeStyles } from \"@material-ui/core\";\r\nimport { Textarea } from \"@chakra-ui/react\"\r\nimport { deepOrange, deepPurple } from '@material-ui/core/colors';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n    orange: {\r\n      color: theme.palette.getContrastText(deepOrange[500]),\r\n      backgroundColor: deepOrange[500],\r\n    },\r\n    purple: {\r\n      color: theme.palette.getContrastText(deepPurple[500]),\r\n      backgroundColor: deepPurple[500],\r\n    },\r\n  }));\r\n\r\n\r\n\r\nexport default function FormDialog() {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n        },\r\n        margin: {\r\n            margin: theme.spacing(1),\r\n        },\r\n    }));\r\n\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n                Open form dialog\r\n      </Button>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n                fullWidth = {false}\r\n                maxWidth='sm'\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">\r\n                Add Board\r\n                </DialogTitle>\r\n\r\n                <DialogContent>\r\n                    <Box display=\"flex\" flexDirection=\"column\" justifyContent='center'>\r\n                        <Box>\r\n                        <TextField\r\n                        id=\"outlined-helperText\"\r\n                        label=\"Description\"\r\n                        defaultValue=\"Default Value\"\r\n                        helperText=\"Note\"\r\n                        variant=\"outlined\"\r\n                        inputProps={{ readOnly: false, }}\r\n                        fullWidth />\r\n                        </Box>\r\n                        <Box m ={2}/>\r\n                        <Box>\r\n\r\n                        {/* <UsersDropdown/> */}\r\n\r\nl\r\n\r\n\r\n                        {/* <TextField\r\n                        id=\"outlined-helperText\"\r\n                        label=\"Description\"\r\n                        defaultValue=\"Default Value\"\r\n                        helperText=\"Note\"\r\n                        variant=\"outlined\"\r\n                        inputProps={{ readOnly: false, }}\r\n                        fullWidth /> */}\r\n                        \r\n                        </Box>\r\n                    </Box> \r\n                </DialogContent>\r\n\r\n                <DialogContent>\r\n\r\n                <div className={classes.root}>\r\n      <Avatar>H</Avatar>\r\n      <Avatar className={classes.orange}>N</Avatar>\r\n      <Avatar className={classes.purple}>OP</Avatar>\r\n    </div>\r\n                </DialogContent>\r\n\r\n        \r\n\r\n\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Save\r\n                    </Button>\r\n                </DialogActions>\r\n                \r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","E:\\greendeck\\trelloclone\\src\\components\\dropdown\\dropdown.js",["155","156","157","158","159","160","161"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport {Button, Avatar,Box} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n     margin: theme.spacing(1),\r\n     minWidth: 120,\r\n     maxWidth: 160,\r\n  },\r\n  chips: {\r\n     display: 'flex',\r\n     flexWrap: 'wrap',\r\n    // width: theme.spacing(30)\r\n  },\r\n  chip: {\r\n    margin: 2,\r\n  },\r\n  noLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nconst names = [\r\n  'Oliver Hansen',\r\n  'Van Henry',\r\n  'April Tucker',\r\n  'Ralph Hubbard',\r\n  'Omar Alexander',\r\n  'Carlos Abbott',\r\n  'Miriam Wagner',\r\n  'Bradley Wilkerson',\r\n  'Virginia Andrews',\r\n  'Kelly Snyder',\r\n];\r\n\r\nfunction getStyles(name, personName, theme) {\r\n  return {\r\n    fontWeight:\r\n      personName.indexOf(name) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium,\r\n  };\r\n}\r\n\r\nexport default function MultipleSelect() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [personName, setPersonName] = React.useState([]);\r\n\r\n  const handleChange = (event) => {\r\n    setPersonName(event.target.value);\r\n  };\r\n\r\n  const handleChangeMultiple = (event) => {\r\n    const { options } = event.target;\r\n    const value = [];\r\n    for (let i = 0, l = options.length; i < l; i += 1) {\r\n      if (options[i].selected) {\r\n        value.push(options[i].value);\r\n      }\r\n    }\r\n    setPersonName(value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      \r\n      {/* <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-mutiple-checkbox-label\">Tag</InputLabel>\r\n        <Select\r\n          labelId=\"demo-mutiple-checkbox-label\"\r\n          id=\"demo-mutiple-checkbox\"\r\n          multiple\r\n          value={personName}\r\n          onChange={handleChange}\r\n          input={<Input />}\r\n          renderValue={(selected) => selected.join(', ')}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {names.map((name) => (\r\n            <MenuItem key={name} value={name}>\r\n              <Checkbox checked={personName.indexOf(name) > -1} />\r\n              <ListItemText primary={name} />\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl> */}\r\n\r\n\r\n\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-mutiple-chip-label\">Add Members</InputLabel>\r\n        <Select\r\n          // labelId=\"demo-mutiple-chip-label\"\r\n          // id=\"demo-mutiple-chip\"\r\n          multiple\r\n          value={personName}\r\n          onChange={handleChange}\r\n          // input={<Input id=\"select-multiple-chip\" />}\r\n          renderValue={(selected) => (\r\n            <div className={classes.chips}>\r\n              {selected.map((value) => (\r\n                // <Chip key={value} label={value} className={classes.chip} />\r\n                    \r\n              //<Avatar className={classes.chip}>{[value.charAt(0) , value.charAt(1)].join('')}</Avatar>\r\n              <span/>      \r\n              ))}\r\n            </div>\r\n          )}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {names.map((name) => (\r\n            <MenuItem key={name} value={name}>\r\n              <Checkbox checked={personName.indexOf(name) > -1} />\r\n              <ListItemText primary={name} />\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n        <Box m={2}/>\r\n        <div className={classes.chips}>\r\n              {personName.map((value) => (\r\n                // <Chip key={value} label={value} className={classes.chip} />\r\n                    \r\n              <Avatar >{[value.charAt(0) , value.charAt(1)].join('')}</Avatar>\r\n                    // By random Color generator we can change color of every avatar\r\n              ))}\r\n      </div>    \r\n\r\n      </FormControl>\r\n\r\n      \r\n\r\n\r\n      \r\n    \r\n    </div>\r\n  );\r\n}\r\n","E:\\greendeck\\trelloclone\\src\\pages\\defaultPage\\default.js",["162","163"],"E:\\greendeck\\trelloclone\\src\\pages\\login\\login.js",[],"E:\\greendeck\\trelloclone\\src\\pages\\signin\\signup.js",[],"E:\\greendeck\\trelloclone\\src\\pages\\boards\\boards.js",[],"E:\\greendeck\\trelloclone\\src\\components\\boardComponent\\boardComponent.js",["164"],"E:\\greendeck\\trelloclone\\src\\components\\boardComponent\\BoardComponent.js",["165"],"import React from 'react';\r\nimport './BoardComponent.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Card, CardContent, CardActions, Typography, Button, Avatar } from '@material-ui/core';\r\nimport { AvatarGroup } from '@material-ui/lab';\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Custom Style For mUI\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      minWidth: 275,\r\n      backgroundColor: '#f2f4fc'\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  \r\n  });\r\n\r\n\r\n\r\n\r\n\r\n  const BoardComponent = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div className=\"hello\">\r\n                <Card className={classes.root}>\r\n\r\n                    <CardContent>\r\n\r\n                        <Typography variant=\"h5\" component=\"h2\">\r\n                            Product Team\r\n                            </Typography>\r\n\r\n                    </CardContent>\r\n\r\n                    <CardActions>\r\n                        <AvatarGroup max={4}>\r\n\r\n                            <Avatar alt=\"RS\" src=\"/static/images/avatar/1.jpg\" />\r\n                            <Avatar alt=\"Travis Howard\" src=\"/static/images/avatar/2.jpg\" />\r\n                            <Avatar alt=\"Cindy Baker\" src=\"/static/images/avatar/3.jpg\" />\r\n                            <Avatar alt=\"Agnes Walker\" src=\"/static/images/avatar/4.jpg\" />\r\n                            <Avatar alt=\"Trevor Henderson\" src=\"/static/images/avatar/5.jpg\" />\r\n\r\n                        </AvatarGroup>\r\n                    </CardActions>\r\n                </Card>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default BoardComponent;\r\n",["166","167"],"E:\\greendeck\\trelloclone\\src\\pages\\Boards\\Boards.js",["168","169","170","171"],"E:\\greendeck\\trelloclone\\src\\components\\BoardComponent\\BoardComponent.js",["172","173"],"E:\\greendeck\\trelloclone\\src\\components\\CreateBoardComponent\\CreateBoard.js",["174","175","176","177","178","179","180","181","182","183","184","185","186","187"],"E:\\greendeck\\trelloclone\\src\\pages\\Signin\\Signup.js",["188"],"E:\\greendeck\\trelloclone\\src\\pages\\Login\\Login.js",["189"],"E:\\greendeck\\trelloclone\\src\\pages\\Dashboard\\Dashboard.js",["190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208"],"E:\\greendeck\\trelloclone\\src\\pages\\Home\\Home.js",[],"E:\\greendeck\\trelloclone\\src\\pages\\DefaultPage\\Default.js",["209","210"],"import React, { useState } from \"react\";\r\nimport \"./Default.css\";\r\nimport logo from '../../assets/icons/trello-logo-white.png';\r\nimport demoimg from '../../assets/images/pop7.png';\r\nimport { Fade } from \"react-reveal\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\n// import { NavLink, Link } from \"react-router-dom\";\r\n\r\n\r\nfunction DefaultPage() {\r\n  //   const exp = workExperiences.viewExperiences;\r\n\r\n  const link = useHistory();\r\n\r\n  const [email, setemail] = useState(\"\");\r\n\r\n  const changed = (evt) => { \r\n    console.log(evt.target.value);\r\n    setemail(evt.target.value);\r\n  }\r\n\r\n  return (\r\n    <Fade top duration={1000} distance=\"20px\">\r\n      <div className=\"Navbar\">\r\n\r\n        <header className=\"header\">\r\n          \r\n          {/* Logo */}\r\n          <a href=\"/\" className=\"logo\">\r\n            <img src={logo} className=\"logo-icon\" alt=\"Trello Clone\" />\r\n          </a>\r\n\r\n          \r\n        <ul className=\"menu\">\r\n           \r\n                  {/* Login Buttons */}\r\n                  <li>  <a href=\"/login\" style={{ \"margin-top\": 10 }}>Log In</a>  </li>\r\n                  \r\n\r\n                  {/* SignIn Buttons */}\r\n                  <li>\r\n                    <a>\r\n\r\n                      <div className='button'>\r\n                        <button className=\"button\" onClick={() => link.push('/signup')} >Sign Up</button>\r\n                      </div>\r\n\r\n                    </a>\r\n                  </li>\r\n        \r\n        </ul>\r\n        \r\n        </header>\r\n\r\n\r\n\r\n        <img src={demoimg} className=\"demo-image\"></img>\r\n\r\n\r\n\r\n\r\n        {/* Pass Email-Id to SignUp Page */}\r\n        <signup className=\"signup\">\r\n          <input onChange={changed} type='text' placeholder=\"Email\" />\r\n          <span />\r\n          <button className=\"signupButton\" onClick={() => link.push({ pathname: '/signup', name: email })} > Sign Up - It's Free </button>\r\n        </signup>\r\n\r\n\r\n\r\n\r\n      </div>\r\n    </Fade>\r\n  );\r\n}\r\n\r\nexport default DefaultPage;\r\n\r\n\r\n\r\n","E:\\greendeck\\trelloclone\\src\\components\\AddMembers\\AddMembers.js",["211","212","213","214","215","216","217","218","219","220","221"],"E:\\greendeck\\trelloclone\\src\\components\\AddTask\\AddTask.js",["222","223","224","225","226","227","228"],"import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { AvatarGroup } from \"@material-ui/lab\";\r\nimport { Card,Avatar, Typography, Box,Container,Divider, InputBase, Input, makeStyles } from \"@material-ui/core\";\r\nimport { Textarea } from \"@chakra-ui/react\"\r\nimport EditTask from  \"../../components/EditTask/EditTask\"\r\nexport default function FormDialog() {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n        },\r\n        margin: {\r\n            margin: theme.spacing(1),\r\n        },\r\n    }));\r\n\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        // onClick={handleClickOpen}\r\n        <div>\r\n            {/* <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n                Open form dialog\r\n      </Button> */}\r\n      <button className=\"addTask_button\" onClick={handleClickOpen}>+</button>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n                fullWidth\r\n                maxWidth='md'\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">\r\n          Add Task\r\n        </DialogTitle>\r\n        \r\n            <Box display=\"flex\">\r\n            <Container maxWidth='md'>\r\n\r\n                <DialogContent>\r\n                        \r\n                         {/* <InputBase\r\n                            className={classes.margin}\r\n                            // defaultValue=\"Naked input\"\r\n                            inputProps={{ 'aria-label': 'naked',readOnly: false, }} \r\n                            />  \r\n                        */}\r\n\r\n                    <Input  placeholder=\"Task Title\" inputProps={{ 'aria-label': 'description', readOnly: false }} />\r\n\r\n                </DialogContent>\r\n\r\n                <Box  m ={3}/>            \r\n                <DialogContent>\r\n\r\n                    <Box display=\"flex\">\r\n                        <Box><Typography>Members</Typography></Box>\r\n                        <Box m={0.2} />\r\n                        <Box><button className=\"addTask_button\">+</button></Box>\r\n                    </Box>\r\n                    <Box  m ={2}/>\r\n                    <AvatarGroup max={4}>\r\n                        <Avatar alt=\"RS\" src=\"/static/images/avatar/1.jpg\" />\r\n                        <Avatar alt=\"Travis Howard\" src=\"/static/images/avatar/2.jpg\" />\r\n                        <Avatar alt=\"Cindy Baker\" src=\"/static/images/avatar/3.jpg\" />\r\n                        <Avatar alt=\"Agnes Walker\" src=\"/static/images/avatar/4.jpg\" />\r\n                        <Avatar alt=\"Trevor Henderson\" src=\"/static/images/avatar/5.jpg\" />\r\n                    </AvatarGroup>\r\n                </DialogContent>\r\n                <Box  m ={5}/>\r\n                <DialogContent >\r\n                    \r\n\r\n                        <textarea rows=\"7\" cols=\"75\" value = \"The cat was playing in the garden.\" >\r\n                            \r\n                        </textarea>\r\n\r\n                    \r\n                        \r\n                        \r\n                    {/* <TextField\r\n                        id=\"outlined-helperText\"\r\n                        label=\"Description\"\r\n                        defaultValue=\"Default Value\"\r\n                        helperText=\"Note\"\r\n                        variant=\"outlined\"\r\n                        inputProps={{ readOnly: false, }}\r\n                        fullWidth /> */}\r\n\r\n\r\n                </DialogContent>\r\n                </Container>\r\n\r\n                <Box>\r\n                    <Box display=\"flex\" flexDirection=\"column\" justifyContent='center' marginTop={0}>\r\n\r\n                        {/* <button className=\"log_button\">Edit</button> */}\r\n                        {/* <Divider  /> */}\r\n                        {/* <button className=\"log_button\">Join Task</button> */}\r\n                        <Box component='span' m={2}/>\r\n                        \r\n                        <Typography>Move To</Typography>\r\n                        <Divider  />\r\n                        <button className=\"log_button\">To-Do</button>\r\n                        <button className=\"log_button\">Development</button>\r\n                        <button className=\"log_button\">Review</button>\r\n                        <button className=\"log_button\">Finished</button>\r\n\r\n                        \r\n                </Box>\r\n                \r\n                </Box>\r\n                </Box>\r\n\r\n\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Save\r\n                    </Button>\r\n                </DialogActions>\r\n                \r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","E:\\greendeck\\trelloclone\\src\\components\\TaskCard\\TaskCard.js",["229","230","231"],"import React from 'react';\r\nimport './TaskCard.css';\r\nimport { Card,CardContent,CardActions,Typography,Button,Avatar,IconButton } from '@material-ui/core';\r\nimport { AvatarGroup } from '@material-ui/lab';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport OpenTask from \"../../components/OpenTask/OpenTask\";\r\n\r\nconst TaskCard = (props) => {\r\n  \r\n\r\n    // Custom mUI\r\n    const useStyles = makeStyles({\r\n        root: {\r\n          minWidth: 20,\r\n          backgroundColor: '#f2f4fc'\r\n        },\r\n        bullet: {\r\n          display: 'inline-block',\r\n          margin: '0 2px',\r\n          transform: 'scale(0.8)',\r\n        },\r\n        title: {\r\n          fontSize: 12,\r\n        },\r\n        pos: {\r\n          marginBottom: 12,\r\n        },\r\n        \r\n      });\r\n\r\n    \r\n\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div className=\"tsk\">\r\n\r\n\r\n            <Card className={classes.root}>\r\n      <CardContent>\r\n        \r\n        <Typography variant=\"h6\" component=\"h2\">\r\n        {props.title}\r\n        </Typography>\r\n        <Typography className={classes.pos} color=\"textSecondary\">\r\n    {/* {props.title} */}\r\n        </Typography>\r\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n          Work of the Day\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        {/* <Button className={classes.color} size=\"small\" >More</Button> */}\r\n        <AvatarGroup max={4}>\r\n      <Avatar alt=\"RS\" src=\"/static/images/avatar/1.jpg\" />\r\n      <Avatar alt=\"Travis Howard\" src=\"/static/images/avatar/2.jpg\" />\r\n      <Avatar alt=\"Cindy Baker\" src=\"/static/images/avatar/3.jpg\" />\r\n      <Avatar alt=\"Agnes Walker\" src=\"/static/images/avatar/4.jpg\" />\r\n      <Avatar alt=\"Trevor Henderson\" src=\"/static/images/avatar/5.jpg\" />\r\n    </AvatarGroup>\r\n      </CardActions>\r\n    </Card>\r\n</div>\r\n    );\r\n}\r\n\r\nexport default TaskCard;\r\n","E:\\greendeck\\trelloclone\\src\\components\\ListTitle\\ListTitle.js",[],"E:\\greendeck\\trelloclone\\src\\components\\OpenTask\\OpenTask.js",["232","233","234","235","236","237","238","239","240","241"],"E:\\greendeck\\trelloclone\\src\\components\\EditTask\\EditTask.js",["242","243","244","245","246","247","248","249","250","251"],"E:\\greendeck\\trelloclone\\src\\pages\\Admin\\Admin.js",["252","253"],"import React from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nexport default class PersonList extends React.Component {\r\n  \r\n  state = {\r\n    persons: {}\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n\r\n\r\n//-\r\nconst postData = {\r\n  email: \"test7@test.com\",\r\n  password: \"password\"\r\n};\r\n\r\nlet axiosConfig = {\r\n  headers: {\r\n      'Content-Type': 'application/json;charset=UTF-8',\r\n      // 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MDgxMDg0OTQsImV4cCI6MTYwODExMjA5NCwiYXVkIjoiNWZkOWM3M2RiODMzODI2OTgwMmVmODFjIiwiaXNzIjoic2h1YmhhbWxvZGhpLmdpdGh1Yi5pbyJ9.d6thgnrbbcb27YUniKJwN5u-89UG4-G0a3AkbJZkB4k',\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n  }\r\n};\r\n\r\n\r\nconst headers = {\r\n  'Content-Type': 'application/json',\r\n}\r\n    \r\n    axios.post(`http://127.0.0.1:3117/auth/register`,\r\n              postData,\r\n              axiosConfig\r\n     \r\n\r\n\r\n    // {\r\n    //   // headers: \r\n      //   {\r\n      //   'Access-Control-Allow-Origin': '*',\r\n      //   },\r\n\r\n      // proxy: {\r\n      //   host: '127.0.0.1',\r\n      //   port: 3117\r\n      // }\r\n\r\n    // }\r\n    )\r\n      .then(res => {\r\n        \r\n        const persons = res.data;\r\n        console.log(res.data.accessToken);\r\n        const user = {accessToken:res.data.accessToken}; \r\n         localStorage.setItem(\"accessToken\",res.data.accessToken);\r\n         this.setState({ persons });\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      \r\n       \r\n         <div>hello\r\n           {/* {this.state.persons} */}\r\n           </div>\r\n          //  <ul>\r\n          //   { this.state.persons.map(person => <li><text>{person.email}</text></li>)}\r\n          // </ul>\r\n    )\r\n  }\r\n}","E:\\greendeck\\trelloclone\\src\\Datalayer.js",[],{"ruleId":"254","replacedBy":"255"},{"ruleId":"256","replacedBy":"257"},{"ruleId":"258","severity":1,"message":"259","line":4,"column":8,"nodeType":"260","messageId":"261","endLine":4,"endColumn":12},{"ruleId":"258","severity":1,"message":"262","line":3,"column":8,"nodeType":"260","messageId":"261","endLine":3,"endColumn":17},{"ruleId":"258","severity":1,"message":"263","line":7,"column":8,"nodeType":"260","messageId":"261","endLine":7,"endColumn":25},{"ruleId":"258","severity":1,"message":"264","line":10,"column":10,"nodeType":"260","messageId":"261","endLine":10,"endColumn":14},{"ruleId":"258","severity":1,"message":"265","line":10,"column":58,"nodeType":"260","messageId":"261","endLine":10,"endColumn":67},{"ruleId":"258","severity":1,"message":"266","line":11,"column":10,"nodeType":"260","messageId":"261","endLine":11,"endColumn":18},{"ruleId":"258","severity":1,"message":"267","line":34,"column":11,"nodeType":"260","messageId":"261","endLine":34,"endColumn":18},{"ruleId":"258","severity":1,"message":"268","line":6,"column":8,"nodeType":"260","messageId":"261","endLine":6,"endColumn":16},{"ruleId":"258","severity":1,"message":"269","line":7,"column":8,"nodeType":"260","messageId":"261","endLine":7,"endColumn":20},{"ruleId":"258","severity":1,"message":"263","line":7,"column":8,"nodeType":"260","messageId":"261","endLine":7,"endColumn":25},{"ruleId":"258","severity":1,"message":"270","line":9,"column":10,"nodeType":"260","messageId":"261","endLine":9,"endColumn":21},{"ruleId":"258","severity":1,"message":"264","line":10,"column":10,"nodeType":"260","messageId":"261","endLine":10,"endColumn":14},{"ruleId":"258","severity":1,"message":"271","line":10,"column":23,"nodeType":"260","messageId":"261","endLine":10,"endColumn":33},{"ruleId":"258","severity":1,"message":"272","line":10,"column":39,"nodeType":"260","messageId":"261","endLine":10,"endColumn":48},{"ruleId":"258","severity":1,"message":"273","line":10,"column":49,"nodeType":"260","messageId":"261","endLine":10,"endColumn":56},{"ruleId":"258","severity":1,"message":"265","line":10,"column":58,"nodeType":"260","messageId":"261","endLine":10,"endColumn":67},{"ruleId":"258","severity":1,"message":"274","line":10,"column":69,"nodeType":"260","messageId":"261","endLine":10,"endColumn":74},{"ruleId":"258","severity":1,"message":"266","line":11,"column":10,"nodeType":"260","messageId":"261","endLine":11,"endColumn":18},{"ruleId":"258","severity":1,"message":"275","line":17,"column":7,"nodeType":"260","messageId":"261","endLine":17,"endColumn":16},{"ruleId":"258","severity":1,"message":"276","line":2,"column":8,"nodeType":"260","messageId":"261","endLine":2,"endColumn":12},{"ruleId":"258","severity":1,"message":"274","line":4,"column":8,"nodeType":"260","messageId":"261","endLine":4,"endColumn":13},{"ruleId":"258","severity":1,"message":"277","line":11,"column":8,"nodeType":"260","messageId":"261","endLine":11,"endColumn":12},{"ruleId":"258","severity":1,"message":"278","line":12,"column":9,"nodeType":"260","messageId":"261","endLine":12,"endColumn":15},{"ruleId":"258","severity":1,"message":"279","line":57,"column":10,"nodeType":"260","messageId":"261","endLine":57,"endColumn":19},{"ruleId":"258","severity":1,"message":"280","line":68,"column":9,"nodeType":"260","messageId":"261","endLine":68,"endColumn":14},{"ruleId":"258","severity":1,"message":"281","line":75,"column":9,"nodeType":"260","messageId":"261","endLine":75,"endColumn":29},{"ruleId":"282","severity":1,"message":"283","line":44,"column":21,"nodeType":"284","endLine":44,"endColumn":24},{"ruleId":"285","severity":1,"message":"286","line":59,"column":9,"nodeType":"284","endLine":59,"endColumn":51},{"ruleId":"258","severity":1,"message":"278","line":4,"column":54,"nodeType":"260","messageId":"261","endLine":4,"endColumn":60},{"ruleId":"258","severity":1,"message":"278","line":4,"column":54,"nodeType":"260","messageId":"261","endLine":4,"endColumn":60},{"ruleId":"254","replacedBy":"287"},{"ruleId":"256","replacedBy":"288"},{"ruleId":"258","severity":1,"message":"278","line":3,"column":10,"nodeType":"260","messageId":"261","endLine":3,"endColumn":16},{"ruleId":"258","severity":1,"message":"289","line":19,"column":9,"nodeType":"260","messageId":"261","endLine":19,"endColumn":17},{"ruleId":"290","severity":1,"message":"291","line":27,"column":33,"nodeType":"292","messageId":"293","endLine":27,"endColumn":34},{"ruleId":"258","severity":1,"message":"294","line":48,"column":7,"nodeType":"260","messageId":"261","endLine":48,"endColumn":14},{"ruleId":"258","severity":1,"message":"278","line":4,"column":54,"nodeType":"260","messageId":"261","endLine":4,"endColumn":60},{"ruleId":"258","severity":1,"message":"295","line":6,"column":20,"nodeType":"260","messageId":"261","endLine":6,"endColumn":31},{"ruleId":"258","severity":1,"message":"296","line":1,"column":24,"nodeType":"260","messageId":"261","endLine":1,"endColumn":33},{"ruleId":"258","severity":1,"message":"263","line":7,"column":8,"nodeType":"260","messageId":"261","endLine":7,"endColumn":25},{"ruleId":"258","severity":1,"message":"270","line":9,"column":10,"nodeType":"260","messageId":"261","endLine":9,"endColumn":21},{"ruleId":"258","severity":1,"message":"264","line":10,"column":10,"nodeType":"260","messageId":"261","endLine":10,"endColumn":14},{"ruleId":"258","severity":1,"message":"297","line":10,"column":15,"nodeType":"260","messageId":"261","endLine":10,"endColumn":21},{"ruleId":"258","severity":1,"message":"271","line":10,"column":23,"nodeType":"260","messageId":"261","endLine":10,"endColumn":33},{"ruleId":"258","severity":1,"message":"272","line":10,"column":39,"nodeType":"260","messageId":"261","endLine":10,"endColumn":48},{"ruleId":"258","severity":1,"message":"273","line":10,"column":49,"nodeType":"260","messageId":"261","endLine":10,"endColumn":56},{"ruleId":"258","severity":1,"message":"265","line":10,"column":58,"nodeType":"260","messageId":"261","endLine":10,"endColumn":67},{"ruleId":"258","severity":1,"message":"274","line":10,"column":69,"nodeType":"260","messageId":"261","endLine":10,"endColumn":74},{"ruleId":"258","severity":1,"message":"266","line":11,"column":10,"nodeType":"260","messageId":"261","endLine":11,"endColumn":18},{"ruleId":"258","severity":1,"message":"267","line":49,"column":11,"nodeType":"260","messageId":"261","endLine":49,"endColumn":18},{"ruleId":"290","severity":1,"message":"291","line":77,"column":38,"nodeType":"292","messageId":"293","endLine":77,"endColumn":39},{"ruleId":"258","severity":1,"message":"298","line":84,"column":11,"nodeType":"260","messageId":"261","endLine":84,"endColumn":18},{"ruleId":"258","severity":1,"message":"298","line":34,"column":11,"nodeType":"260","messageId":"261","endLine":34,"endColumn":18},{"ruleId":"258","severity":1,"message":"299","line":14,"column":11,"nodeType":"260","messageId":"261","endLine":14,"endColumn":19},{"ruleId":"258","severity":1,"message":"300","line":1,"column":16,"nodeType":"260","messageId":"261","endLine":1,"endColumn":24},{"ruleId":"258","severity":1,"message":"296","line":1,"column":25,"nodeType":"260","messageId":"261","endLine":1,"endColumn":34},{"ruleId":"258","severity":1,"message":"264","line":4,"column":10,"nodeType":"260","messageId":"261","endLine":4,"endColumn":14},{"ruleId":"258","severity":1,"message":"301","line":4,"column":16,"nodeType":"260","messageId":"261","endLine":4,"endColumn":27},{"ruleId":"258","severity":1,"message":"302","line":4,"column":29,"nodeType":"260","messageId":"261","endLine":4,"endColumn":40},{"ruleId":"258","severity":1,"message":"271","line":4,"column":42,"nodeType":"260","messageId":"261","endLine":4,"endColumn":52},{"ruleId":"258","severity":1,"message":"278","line":4,"column":54,"nodeType":"260","messageId":"261","endLine":4,"endColumn":60},{"ruleId":"258","severity":1,"message":"297","line":4,"column":62,"nodeType":"260","messageId":"261","endLine":4,"endColumn":68},{"ruleId":"258","severity":1,"message":"303","line":4,"column":70,"nodeType":"260","messageId":"261","endLine":4,"endColumn":80},{"ruleId":"258","severity":1,"message":"304","line":5,"column":8,"nodeType":"260","messageId":"261","endLine":5,"endColumn":17},{"ruleId":"258","severity":1,"message":"270","line":6,"column":10,"nodeType":"260","messageId":"261","endLine":6,"endColumn":21},{"ruleId":"258","severity":1,"message":"305","line":7,"column":8,"nodeType":"260","messageId":"261","endLine":7,"endColumn":18},{"ruleId":"258","severity":1,"message":"306","line":8,"column":8,"nodeType":"260","messageId":"261","endLine":8,"endColumn":21},{"ruleId":"258","severity":1,"message":"307","line":9,"column":8,"nodeType":"260","messageId":"261","endLine":9,"endColumn":19},{"ruleId":"258","severity":1,"message":"308","line":10,"column":8,"nodeType":"260","messageId":"261","endLine":10,"endColumn":21},{"ruleId":"258","severity":1,"message":"309","line":12,"column":8,"nodeType":"260","messageId":"261","endLine":12,"endColumn":21},{"ruleId":"258","severity":1,"message":"310","line":14,"column":8,"nodeType":"260","messageId":"261","endLine":14,"endColumn":13},{"ruleId":"258","severity":1,"message":"267","line":44,"column":9,"nodeType":"260","messageId":"261","endLine":44,"endColumn":16},{"ruleId":"258","severity":1,"message":"311","line":47,"column":9,"nodeType":"260","messageId":"261","endLine":47,"endColumn":13},{"ruleId":"282","severity":1,"message":"283","line":44,"column":21,"nodeType":"284","endLine":44,"endColumn":24},{"ruleId":"285","severity":1,"message":"286","line":59,"column":9,"nodeType":"284","endLine":59,"endColumn":51},{"ruleId":"258","severity":1,"message":"263","line":7,"column":8,"nodeType":"260","messageId":"261","endLine":7,"endColumn":25},{"ruleId":"258","severity":1,"message":"270","line":9,"column":10,"nodeType":"260","messageId":"261","endLine":9,"endColumn":21},{"ruleId":"258","severity":1,"message":"264","line":10,"column":10,"nodeType":"260","messageId":"261","endLine":10,"endColumn":14},{"ruleId":"258","severity":1,"message":"297","line":10,"column":15,"nodeType":"260","messageId":"261","endLine":10,"endColumn":21},{"ruleId":"258","severity":1,"message":"271","line":10,"column":23,"nodeType":"260","messageId":"261","endLine":10,"endColumn":33},{"ruleId":"258","severity":1,"message":"272","line":10,"column":39,"nodeType":"260","messageId":"261","endLine":10,"endColumn":48},{"ruleId":"258","severity":1,"message":"273","line":10,"column":49,"nodeType":"260","messageId":"261","endLine":10,"endColumn":56},{"ruleId":"258","severity":1,"message":"265","line":10,"column":58,"nodeType":"260","messageId":"261","endLine":10,"endColumn":67},{"ruleId":"258","severity":1,"message":"274","line":10,"column":69,"nodeType":"260","messageId":"261","endLine":10,"endColumn":74},{"ruleId":"258","severity":1,"message":"266","line":11,"column":10,"nodeType":"260","messageId":"261","endLine":11,"endColumn":18},{"ruleId":"258","severity":1,"message":"267","line":49,"column":11,"nodeType":"260","messageId":"261","endLine":49,"endColumn":18},{"ruleId":"258","severity":1,"message":"262","line":3,"column":8,"nodeType":"260","messageId":"261","endLine":3,"endColumn":17},{"ruleId":"258","severity":1,"message":"263","line":7,"column":8,"nodeType":"260","messageId":"261","endLine":7,"endColumn":25},{"ruleId":"258","severity":1,"message":"264","line":10,"column":10,"nodeType":"260","messageId":"261","endLine":10,"endColumn":14},{"ruleId":"258","severity":1,"message":"265","line":10,"column":58,"nodeType":"260","messageId":"261","endLine":10,"endColumn":67},{"ruleId":"258","severity":1,"message":"266","line":11,"column":10,"nodeType":"260","messageId":"261","endLine":11,"endColumn":18},{"ruleId":"258","severity":1,"message":"312","line":12,"column":8,"nodeType":"260","messageId":"261","endLine":12,"endColumn":16},{"ruleId":"258","severity":1,"message":"267","line":35,"column":11,"nodeType":"260","messageId":"261","endLine":35,"endColumn":18},{"ruleId":"258","severity":1,"message":"278","line":3,"column":50,"nodeType":"260","messageId":"261","endLine":3,"endColumn":56},{"ruleId":"258","severity":1,"message":"303","line":3,"column":64,"nodeType":"260","messageId":"261","endLine":3,"endColumn":74},{"ruleId":"258","severity":1,"message":"313","line":6,"column":8,"nodeType":"260","messageId":"261","endLine":6,"endColumn":16},{"ruleId":"258","severity":1,"message":"296","line":1,"column":25,"nodeType":"260","messageId":"261","endLine":1,"endColumn":34},{"ruleId":"258","severity":1,"message":"278","line":2,"column":8,"nodeType":"260","messageId":"261","endLine":2,"endColumn":14},{"ruleId":"258","severity":1,"message":"262","line":3,"column":8,"nodeType":"260","messageId":"261","endLine":3,"endColumn":17},{"ruleId":"258","severity":1,"message":"314","line":5,"column":8,"nodeType":"260","messageId":"261","endLine":5,"endColumn":21},{"ruleId":"258","severity":1,"message":"263","line":7,"column":8,"nodeType":"260","messageId":"261","endLine":7,"endColumn":25},{"ruleId":"258","severity":1,"message":"264","line":10,"column":10,"nodeType":"260","messageId":"261","endLine":10,"endColumn":14},{"ruleId":"258","severity":1,"message":"265","line":10,"column":58,"nodeType":"260","messageId":"261","endLine":10,"endColumn":67},{"ruleId":"258","severity":1,"message":"266","line":11,"column":10,"nodeType":"260","messageId":"261","endLine":11,"endColumn":18},{"ruleId":"258","severity":1,"message":"315","line":23,"column":22,"nodeType":"260","messageId":"261","endLine":23,"endColumn":33},{"ruleId":"258","severity":1,"message":"267","line":48,"column":11,"nodeType":"260","messageId":"261","endLine":48,"endColumn":18},{"ruleId":"258","severity":1,"message":"296","line":1,"column":25,"nodeType":"260","messageId":"261","endLine":1,"endColumn":34},{"ruleId":"258","severity":1,"message":"262","line":3,"column":8,"nodeType":"260","messageId":"261","endLine":3,"endColumn":17},{"ruleId":"258","severity":1,"message":"263","line":7,"column":8,"nodeType":"260","messageId":"261","endLine":7,"endColumn":25},{"ruleId":"258","severity":1,"message":"264","line":10,"column":10,"nodeType":"260","messageId":"261","endLine":10,"endColumn":14},{"ruleId":"258","severity":1,"message":"265","line":10,"column":58,"nodeType":"260","messageId":"261","endLine":10,"endColumn":67},{"ruleId":"258","severity":1,"message":"266","line":11,"column":10,"nodeType":"260","messageId":"261","endLine":11,"endColumn":18},{"ruleId":"258","severity":1,"message":"316","line":12,"column":8,"nodeType":"260","messageId":"261","endLine":12,"endColumn":12},{"ruleId":"258","severity":1,"message":"317","line":19,"column":12,"nodeType":"260","messageId":"261","endLine":19,"endColumn":23},{"ruleId":"258","severity":1,"message":"318","line":19,"column":25,"nodeType":"260","messageId":"261","endLine":19,"endColumn":39},{"ruleId":"258","severity":1,"message":"267","line":46,"column":11,"nodeType":"260","messageId":"261","endLine":46,"endColumn":18},{"ruleId":"258","severity":1,"message":"319","line":30,"column":7,"nodeType":"260","messageId":"261","endLine":30,"endColumn":14},{"ruleId":"258","severity":1,"message":"320","line":57,"column":15,"nodeType":"260","messageId":"261","endLine":57,"endColumn":19},"no-native-reassign",["321"],"no-negated-in-lhs",["322"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'TextField' is defined but never used.","'DialogContentText' is defined but never used.","'Card' is defined but never used.","'InputBase' is defined but never used.","'Textarea' is defined but never used.","'classes' is assigned a value but never used.","'ListItem' is defined but never used.","'ListItemText' is defined but never used.","'AvatarGroup' is defined but never used.","'Typography' is defined but never used.","'Container' is defined but never used.","'Divider' is defined but never used.","'Input' is defined but never used.","'useStyles' is assigned a value but never used.","'clsx' is defined but never used.","'Chip' is defined but never used.","'Button' is defined but never used.","'getStyles' is defined but never used.","'theme' is assigned a value but never used.","'handleChangeMultiple' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["321"],["322"],"'postData' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'persons' is assigned a value but never used.","'useLocation' is defined but never used.","'useEffect' is defined but never used.","'Avatar' is defined but never used.","'baseURL' is assigned a value but never used.","'location' is assigned a value but never used.","'useState' is defined but never used.","'CardContent' is defined but never used.","'CardActions' is defined but never used.","'IconButton' is defined but never used.","'AlarmIcon' is defined but never used.","'TaskDialog' is defined but never used.","'MembersDialog' is defined but never used.","'BoardDialog' is defined but never used.","'UsersDropdown' is defined but never used.","'AddTaskButton' is defined but never used.","'axios' is defined but never used.","'link' is assigned a value but never used.","'EditTask' is defined but never used.","'OpenTask' is defined but never used.","'DialogActions' is defined but never used.","'settaskname' is assigned a value but never used.","'Task' is defined but never used.","'description' is assigned a value but never used.","'setdescription' is assigned a value but never used.","'headers' is assigned a value but never used.","'user' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]